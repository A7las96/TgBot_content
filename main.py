import logging
from create_bot import dp, bot
from aiogram import types
from data_base import sqlite_db
from aiogram.utils import executor
from typing import TYPE_CHECKING, Any, Dict, Union

from handlers.suggest import register_handlers_suggest
from handlers.admin import register_handlers_admin
from handlers.user import register_handlers_user

from handlers.suggest import group_id

# from handlers import suggest, common, admin


async def set_default_commands(dp):
    await dp.bot.set_my_commands([], types.bot_command_scope.BotCommandScopeChat(group_id))

    await dp.bot.set_my_commands([
        types.BotCommand('accept', "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ ‚úÖ"),
        types.BotCommand('cancel', "–û—Ç–∫–ª–æ–Ω–∏—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ ‚ùå"),
        types.BotCommand('drop_database', "–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ‚ôª"),
        types.BotCommand('help', "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º üìí")
    ], types.bot_command_scope.BotCommandScopeChatAdministrators(group_id))

    await dp.bot.set_my_commands([
        types.BotCommand('help', "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º üìí"),
        types.BotCommand('dice', "–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫–∏? üé≤"),
        types.BotCommand('suggest', "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ üå†")
    ], types.bot_command_scope.BotCommandScopeAllPrivateChats())


async def on_startup(_):
    print('–ë–æ—Ç –≤—ã—à–µ–ª –≤ –æ–Ω–ª–∞–π–Ω')
    sqlite_db.init_db(force=True)

    await set_default_commands(dp)


register_handlers_admin(dp)
register_handlers_suggest(dp)
register_handlers_user(dp)

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup)
